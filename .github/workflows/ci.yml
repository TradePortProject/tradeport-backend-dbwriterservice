name: CD - Stage 1 - Deploy to DockerHub

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build, Test, and Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Java and Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run Unit Tests
        run: mvn test

      - name: Build the Java Project
        run: mvn clean package  # Changed from compile to package

      - name: Verify Compiled Classes Exist
        run: ls -l target/classes  # Debugging step

  sonar:
    name: SonarQube Static Analysis
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Verify Compiled Java Classes
        run: |
          echo "Checking if compiled classes exist..."
          find target/classes -name "*.class"

      - name: Debug SonarQube Configuration
        run: |
          echo "Sonar Project Key:" ${{ secrets.SONAR_PROJECT_KEY }}
          echo "Sonar Organization:" ${{ secrets.SONAR_ORGANIZATION }}
          echo "Sonar Token Set:" ${{ secrets.SONAR_TOKEN != '' }}

      - name: Run SonarQube Analysis
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.java.binaries=target/classes

  deploy:
    name: Build and Deploy Docker Image
    runs-on: ubuntu-latest
    needs: sonar
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log In to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ../tradeport-backend-dbwriterservice/Dockerfile
          push: true
          tags: prabhulalithakrishnan/dbwriterservice:latest
